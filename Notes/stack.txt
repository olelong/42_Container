STACK :

Est un adaptateur de conteneurs qui peut agir comme une enveloppe de conteneurs standard
mais fournit des fonctionnalites limitees et specialisees.
Elle fournit par exemple, une structure de donnees LIFO(dernier entre, premier sorti)
comme une pile d'assiette ou on ne peut retirer que celle qui est pose sur le dessus.

Elle peut etre initialise avec un autre objet stack ou des conteneurs de sequences compatibles
comme deque, vector et list.

Le conteneur par defaut utilise pour stocker les elements est deque.

L'objet stack ne peut pas etre itere. On doit utiliser une boucle speciale pour pouvoir
afficher tous les elements de la stack. Par exemple :

template<typename T>
	void printStack(stack<T> s) {
    	while (!s.empty()) {
	        cout << s.top() << "; ";
			s.pop();
		}
	cout << endl;
}


Fonctions :
empty():	Booleen, retourne si la pile est vide(si sa taille est nulle)
size():		Renvoie le nombre d'elements dans la pile
top():		Renvoie une reference a l'element sommet de la pile. L'element
			sommet est le dernier element insere dans la pile.
push(): 	Insere un nouvel element en sommet de la pile, au dessus de son
			element sommet actuel. Le contenu de ce nouvel element est une
			copie de val.
pop():  	Supprime l'element sommet, reduisant ainsi sa taille de 1.
